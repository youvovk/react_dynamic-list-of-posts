{"version":3,"sources":["components/User/User.js","components/Comment/Comment.js","components/CommentList/CommentList.js","components/Post/Post.js","components/PostList/PostList.js","App.js","index.js"],"names":["User","_ref","user","name","email","react_default","a","createElement","concat","address","city","street","suite","Comment","comment","body","className","CommentList","comments","map","components_Comment_Comment","key","id","Post","post","title","User_User","CommentList_CommentList","PostList","fullPosts","components_Post_Post","App","state","preparedPosts","filteredPosts","templateForFilter","isLoading","hasError","isInitialized","receivePosts","_this","setState","Promise","all","fetch","then","_ref2","Object","slicedToArray","responsePosts","responseUsers","responseComments","json","_ref3","_ref4","posts","users","usersMapApi","_objectSpread","filter","postId","userId","getFullPosts","reduce","acum","defineProperty","toConsumableArray","catch","addTextForFilter","_ref5","value","target","sortPosts","event","preventDefault","_ref6","includes","resetFilter","_ref7","_this2","this","_this$state","Fragment","type","onClick","onSubmit","onChange","PostList_PostList","React","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.f340d578.chunk.js","sourcesContent":["import React from 'react';\n\nimport PropTypes from 'prop-types';\n\nfunction User({ user }) {\n  const { name, email } = user;\n\n  return (\n    <div>\n      <div>{name}</div>\n      <div>{email}</div>\n      <div>\n        {`\n          ${user.address.city},\n          ${user.address.street},\n          ${user.address.suite}\n        `}\n      </div>\n    </div>\n  );\n}\n\nconst shape = PropTypes.shape({\n  city: PropTypes.string,\n  street: PropTypes.string,\n  suite: PropTypes.string,\n});\n\nUser.propTypes = {\n  user: PropTypes.shape({\n    name: PropTypes.string,\n    email: PropTypes.string,\n    address: shape.isRequired,\n  }).isRequired,\n};\n\nexport default User;\n","import React from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport './Comment.css';\n\nfunction Comment({ comment }) {\n  const { name, email, body } = comment;\n\n  return (\n    <div>\n      <div className=\"comment__comm\">{body}</div>\n      <div className=\"border\">\n        <p className=\"comment__text-comm\">{name}</p>\n        <p className=\"comment__text-comm\">\n          {email}\n        </p>\n      </div>\n    </div>\n  );\n}\n\nComment.propTypes = {\n  comment: PropTypes.shape({\n    body: PropTypes.string,\n    name: PropTypes.string,\n    email: PropTypes.string,\n  }).isRequired,\n};\n\nexport default Comment;\n","import React from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport Comment from '../Comment/Comment';\n\nfunction CommentList({ comments }) {\n  return (\n    <div>\n      {comments\n        .map(comment => (<Comment comment={comment} key={comment.id} />))\n      }\n    </div>\n  );\n}\n\nCommentList.propTypes = {\n  comments: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n    }).isRequired,\n  ).isRequired,\n};\n\nexport default CommentList;\n","import React from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport User from '../User/User';\nimport CommentList from '../CommentList/CommentList';\n\nimport './Post.css';\n\nfunction Post({ post }) {\n  const { title, body, comments } = post;\n\n  return (\n    <div>\n      <div className=\"post\">\n        <h2 className=\"post__title\">{title}</h2>\n        <p className=\"post__text\">{body}</p>\n        <User user={post.user} />\n      </div>\n\n      <CommentList comments={comments} />\n    </div>\n  );\n}\n\nconst shapeAddress = PropTypes.shape({\n  city: PropTypes.string,\n  street: PropTypes.string,\n  suite: PropTypes.string,\n});\n\nconst shapePost = PropTypes.shape({\n  name: PropTypes.string,\n  email: PropTypes.string,\n  address: shapeAddress.isRequired,\n});\n\nPost.propTypes = {\n  post: PropTypes.shape({\n    title: PropTypes.string,\n    body: PropTypes.string,\n    post: shapePost,\n  }).isRequired,\n};\n\nexport default Post;\n","import React from 'react';\nimport Post from '../Post/Post';\n\nfunction PostList({ fullPosts }) {\n  return (\n    fullPosts.map(post => (\n      <Post post={post} key={post.id} />\n    ))\n  );\n}\n\nexport default PostList;\n","import React from 'react';\nimport PostList from './components/PostList/PostList';\n\nimport './App.css';\n\nfunction getFullPosts(posts, comments, usersMapApi) {\n  return posts.map(post => ({\n    ...post,\n    comments: comments.filter(comment => comment.postId === post.id),\n    user: usersMapApi[post.userId],\n  }));\n}\n\nclass App extends React.Component {\n  state = {\n    preparedPosts: [],\n    filteredPosts: [],\n    templateForFilter: '',\n    isLoading: false,\n    hasError: false,\n    isInitialized: false,\n  };\n\n  receivePosts = () => {\n    this.setState({\n      isLoading: true,\n      hasError: false,\n      isInitialized: true,\n    });\n\n    Promise.all([\n      fetch('https://jsonplaceholder.typicode.com/posts'),\n      fetch('https://jsonplaceholder.typicode.com/users'),\n      fetch('https://jsonplaceholder.typicode.com/comments'),\n    ])\n      .then(([responsePosts, responseUsers, responseComments]) => Promise\n        .all([\n          responsePosts.json(),\n          responseUsers.json(),\n          responseComments.json(),\n        ]))\n      .then(([posts, users, comments]) => {\n        const usersMapApi = users\n          .reduce((acum, user) => ({ ...acum, [user.id]: user }), {});\n\n        const preparedPosts = getFullPosts(posts, comments, usersMapApi);\n\n        this.setState({\n          preparedPosts,\n          filteredPosts: [...preparedPosts],\n          isLoading: false,\n        });\n      })\n      .catch(() => {\n        this.setState({\n          hasError: true,\n          isLoading: false,\n        });\n      });\n  }\n\n  addTextForFilter = ({ target: { value } }) => {\n    this.setState({\n      templateForFilter: value,\n    });\n  }\n\n  sortPosts = (event) => {\n    event.preventDefault();\n\n    const { templateForFilter } = this.state;\n\n    this.setState(({ filteredPosts }) => ({\n      filteredPosts: filteredPosts\n        .filter(post => post.title.includes(templateForFilter)\n        || post.body.includes(templateForFilter)),\n      templateForFilter: '',\n    }));\n  }\n\n  resetFilter = () => {\n    this.setState(({ preparedPosts }) => ({\n      filteredPosts: [...preparedPosts],\n    }));\n  }\n\n  render() {\n    const {\n      filteredPosts,\n      templateForFilter,\n      isLoading,\n      hasError,\n      isInitialized,\n    } = this.state;\n\n    if (isLoading) {\n      return <p className=\"loading\">Loading...</p>;\n    }\n\n    if (hasError) {\n      return (\n        <>\n          <h1 className=\"app__title\">You want to upload again.</h1>\n          <button\n            type=\"button\"\n            className=\"btn btn-warning load load-again\"\n            onClick={this.receivePosts}\n          >\n            Load again\n          </button>\n        </>\n      );\n    }\n\n    if (!isInitialized) {\n      return (\n        <>\n          <h1 className=\"app__title\">Want to upload a list of posts?</h1>\n          <button\n            type=\"button\"\n            className=\"btn btn-primary load\"\n            onClick={this.receivePosts}\n          >\n            Load\n          </button>\n        </>\n      );\n    }\n\n    return (\n      <div className=\"app\">\n        <h1 className=\"app__title\">Static list of posts</h1>\n        <form onSubmit={event => this.sortPosts(event)}>\n          <input\n            onChange={event => this.addTextForFilter(event)}\n            value={templateForFilter}\n            type=\"text\"\n            className=\"text-template\"\n          />\n        </form>\n        <button\n          onClick={this.resetFilter}\n          type=\"button\"\n          className=\"button_reset btn btn-primary load\"\n        >\n          Reset\n        </button>\n        <PostList fullPosts={filteredPosts} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}